//
// Copyright 2020, Juniper Networks, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// [detail]: This file provides RPCs for RPC/Service/Version Discovery.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: jnx_version_service.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [brief]: Junos Version Request Message
// [detail]: Junos Version Request Message
type JunosVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JunosVersionRequest) Reset() {
	*x = JunosVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_version_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JunosVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosVersionRequest) ProtoMessage() {}

func (x *JunosVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_version_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosVersionRequest.ProtoReflect.Descriptor instead.
func (*JunosVersionRequest) Descriptor() ([]byte, []int) {
	return file_jnx_version_service_proto_rawDescGZIP(), []int{0}
}

// [brief]: The Junos version reply
// [detail]: The response containing Junos OS version
type JunosVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Response status.
	Status *RpcStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// [brief]: Junos version string.
	// This will be like Junos: 20.3I20200422173451-EVO
	JunosVersion string `protobuf:"bytes,2,opt,name=junos_version,json=junosVersion,proto3" json:"junos_version,omitempty"`
	// [brief]: gRPC version string.
	GrpcVersion string `protobuf:"bytes,3,opt,name=grpc_version,json=grpcVersion,proto3" json:"grpc_version,omitempty"`
	// [brief]: protobuf version.
	ProtobufVersion string `protobuf:"bytes,4,opt,name=protobuf_version,json=protobufVersion,proto3" json:"protobuf_version,omitempty"`
}

func (x *JunosVersionResponse) Reset() {
	*x = JunosVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_version_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JunosVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JunosVersionResponse) ProtoMessage() {}

func (x *JunosVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_version_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JunosVersionResponse.ProtoReflect.Descriptor instead.
func (*JunosVersionResponse) Descriptor() ([]byte, []int) {
	return file_jnx_version_service_proto_rawDescGZIP(), []int{1}
}

func (x *JunosVersionResponse) GetStatus() *RpcStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *JunosVersionResponse) GetJunosVersion() string {
	if x != nil {
		return x.JunosVersion
	}
	return ""
}

func (x *JunosVersionResponse) GetGrpcVersion() string {
	if x != nil {
		return x.GrpcVersion
	}
	return ""
}

func (x *JunosVersionResponse) GetProtobufVersion() string {
	if x != nil {
		return x.ProtobufVersion
	}
	return ""
}

// [brief]: Message to list all the services
// [detail]: Message to list all the services
type ServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceListRequest) Reset() {
	*x = ServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_version_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceListRequest) ProtoMessage() {}

func (x *ServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_version_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceListRequest.ProtoReflect.Descriptor instead.
func (*ServiceListRequest) Descriptor() ([]byte, []int) {
	return file_jnx_version_service_proto_rawDescGZIP(), []int{2}
}

// [brief]:  List of RPCs Available for given Service
// [detail]: List of RPCs Available for given Service
type ServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Response status.
	Status *RpcStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// [brief]: List of Services available
	// format package::service
	// example routing::Rib
	ServiceName []string `protobuf:"bytes,2,rep,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
}

func (x *ServiceListResponse) Reset() {
	*x = ServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_version_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceListResponse) ProtoMessage() {}

func (x *ServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_version_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceListResponse.ProtoReflect.Descriptor instead.
func (*ServiceListResponse) Descriptor() ([]byte, []int) {
	return file_jnx_version_service_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceListResponse) GetStatus() *RpcStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ServiceListResponse) GetServiceName() []string {
	if x != nil {
		return x.ServiceName
	}
	return nil
}

// [brief]: The Service name to list all RPCs
// [detail]: The Service name to list all RPCs
type RpcListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Service name.
	// should be in format package::service
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
}

func (x *RpcListRequest) Reset() {
	*x = RpcListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_version_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcListRequest) ProtoMessage() {}

func (x *RpcListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_version_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcListRequest.ProtoReflect.Descriptor instead.
func (*RpcListRequest) Descriptor() ([]byte, []int) {
	return file_jnx_version_service_proto_rawDescGZIP(), []int{4}
}

func (x *RpcListRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

// [brief]: The list of RPC
// [detail]: The list of RPC for a given Service.
type RpcListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Response status.
	Status *RpcStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// [brief]: RPC name.
	// example RouteGet
	RpcName []string `protobuf:"bytes,2,rep,name=rpc_name,json=rpcName,proto3" json:"rpc_name,omitempty"`
}

func (x *RpcListResponse) Reset() {
	*x = RpcListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_version_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcListResponse) ProtoMessage() {}

func (x *RpcListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_version_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcListResponse.ProtoReflect.Descriptor instead.
func (*RpcListResponse) Descriptor() ([]byte, []int) {
	return file_jnx_version_service_proto_rawDescGZIP(), []int{5}
}

func (x *RpcListResponse) GetStatus() *RpcStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RpcListResponse) GetRpcName() []string {
	if x != nil {
		return x.RpcName
	}
	return nil
}

// [brief]: The Service Version request
// [detail]: The Service Version request for a given RPC.
type ServiceVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: RPC name to get service version
	// should be package::service::rpc
	//example routing::Rib::RouteGet
	RpcName string `protobuf:"bytes,1,opt,name=rpc_name,json=rpcName,proto3" json:"rpc_name,omitempty"`
}

func (x *ServiceVersionRequest) Reset() {
	*x = ServiceVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_version_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceVersionRequest) ProtoMessage() {}

func (x *ServiceVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_version_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceVersionRequest.ProtoReflect.Descriptor instead.
func (*ServiceVersionRequest) Descriptor() ([]byte, []int) {
	return file_jnx_version_service_proto_rawDescGZIP(), []int{6}
}

func (x *ServiceVersionRequest) GetRpcName() string {
	if x != nil {
		return x.RpcName
	}
	return ""
}

//[brief]: The Service version response
// [detail]: The Service version response
type ServiceVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]:Response status.
	Status *RpcStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// [brief]:Major version of RPC.
	Major uint32 `protobuf:"varint,2,opt,name=major,proto3" json:"major,omitempty"`
	// [brief]:Minor version of RPC.
	Minor uint32 `protobuf:"varint,3,opt,name=minor,proto3" json:"minor,omitempty"`
	// [brief]:patch version of RPC.
	Patch uint32 `protobuf:"varint,4,opt,name=patch,proto3" json:"patch,omitempty"`
	// [brief]:tag of RPC
	Tag string `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *ServiceVersionResponse) Reset() {
	*x = ServiceVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_version_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceVersionResponse) ProtoMessage() {}

func (x *ServiceVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_version_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceVersionResponse.ProtoReflect.Descriptor instead.
func (*ServiceVersionResponse) Descriptor() ([]byte, []int) {
	return file_jnx_version_service_proto_rawDescGZIP(), []int{7}
}

func (x *ServiceVersionResponse) GetStatus() *RpcStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ServiceVersionResponse) GetMajor() uint32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *ServiceVersionResponse) GetMinor() uint32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *ServiceVersionResponse) GetPatch() uint32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *ServiceVersionResponse) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

var File_jnx_version_service_proto protoreflect.FileDescriptor

var file_jnx_version_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6a, 0x6e, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6a, 0x6e, 0x78,
	0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1b, 0x6a, 0x6e,
	0x78, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x4a, 0x75, 0x6e,
	0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xbc, 0x01, 0x0a, 0x14, 0x4a, 0x75, 0x6e, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x6e, 0x78, 0x2e,
	0x6a, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x70, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x70, 0x63, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x14, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a,
	0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x70,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x33, 0x0a, 0x0e, 0x52, 0x70, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x0f, 0x52, 0x70, 0x63, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x6e, 0x78,
	0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x70, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x70, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x70, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x32, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x70, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x70, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9f, 0x01, 0x0a,
	0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x61, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x32, 0x8e,
	0x03, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x12, 0x60, 0x0a, 0x0f, 0x4a, 0x75, 0x6e, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74,
	0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4a, 0x75, 0x6e, 0x6f, 0x73, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6a,
	0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x4a,
	0x75, 0x6e, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65,
	0x74, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6a,
	0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x52, 0x70, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x12, 0x1f, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x70, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x70, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x6a,
	0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x24, 0x5a, 0x11, 0x6c, 0x61, 0x62, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x82, 0xb5, 0x18, 0x05, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x8a, 0xb5, 0x18,
	0x04, 0x32, 0x30, 0x2e, 0x34, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jnx_version_service_proto_rawDescOnce sync.Once
	file_jnx_version_service_proto_rawDescData = file_jnx_version_service_proto_rawDesc
)

func file_jnx_version_service_proto_rawDescGZIP() []byte {
	file_jnx_version_service_proto_rawDescOnce.Do(func() {
		file_jnx_version_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_jnx_version_service_proto_rawDescData)
	})
	return file_jnx_version_service_proto_rawDescData
}

var file_jnx_version_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_jnx_version_service_proto_goTypes = []interface{}{
	(*JunosVersionRequest)(nil),    // 0: jnx.jet.version.JunosVersionRequest
	(*JunosVersionResponse)(nil),   // 1: jnx.jet.version.JunosVersionResponse
	(*ServiceListRequest)(nil),     // 2: jnx.jet.version.ServiceListRequest
	(*ServiceListResponse)(nil),    // 3: jnx.jet.version.ServiceListResponse
	(*RpcListRequest)(nil),         // 4: jnx.jet.version.RpcListRequest
	(*RpcListResponse)(nil),        // 5: jnx.jet.version.RpcListResponse
	(*ServiceVersionRequest)(nil),  // 6: jnx.jet.version.ServiceVersionRequest
	(*ServiceVersionResponse)(nil), // 7: jnx.jet.version.ServiceVersionResponse
	(*RpcStatus)(nil),              // 8: jnx.jet.common.RpcStatus
}
var file_jnx_version_service_proto_depIdxs = []int32{
	8, // 0: jnx.jet.version.JunosVersionResponse.status:type_name -> jnx.jet.common.RpcStatus
	8, // 1: jnx.jet.version.ServiceListResponse.status:type_name -> jnx.jet.common.RpcStatus
	8, // 2: jnx.jet.version.RpcListResponse.status:type_name -> jnx.jet.common.RpcStatus
	8, // 3: jnx.jet.version.ServiceVersionResponse.status:type_name -> jnx.jet.common.RpcStatus
	0, // 4: jnx.jet.version.VersionDiscovery.JunosVersionGet:input_type -> jnx.jet.version.JunosVersionRequest
	2, // 5: jnx.jet.version.VersionDiscovery.ServiceListGet:input_type -> jnx.jet.version.ServiceListRequest
	4, // 6: jnx.jet.version.VersionDiscovery.RpcListGet:input_type -> jnx.jet.version.RpcListRequest
	6, // 7: jnx.jet.version.VersionDiscovery.ServiceVersionGet:input_type -> jnx.jet.version.ServiceVersionRequest
	1, // 8: jnx.jet.version.VersionDiscovery.JunosVersionGet:output_type -> jnx.jet.version.JunosVersionResponse
	3, // 9: jnx.jet.version.VersionDiscovery.ServiceListGet:output_type -> jnx.jet.version.ServiceListResponse
	5, // 10: jnx.jet.version.VersionDiscovery.RpcListGet:output_type -> jnx.jet.version.RpcListResponse
	7, // 11: jnx.jet.version.VersionDiscovery.ServiceVersionGet:output_type -> jnx.jet.version.ServiceVersionResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_jnx_version_service_proto_init() }
func file_jnx_version_service_proto_init() {
	if File_jnx_version_service_proto != nil {
		return
	}
	file_jnx_common_base_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_jnx_version_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JunosVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_version_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JunosVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_version_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_version_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_version_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_version_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_version_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_version_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jnx_version_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jnx_version_service_proto_goTypes,
		DependencyIndexes: file_jnx_version_service_proto_depIdxs,
		MessageInfos:      file_jnx_version_service_proto_msgTypes,
	}.Build()
	File_jnx_version_service_proto = out.File
	file_jnx_version_service_proto_rawDesc = nil
	file_jnx_version_service_proto_goTypes = nil
	file_jnx_version_service_proto_depIdxs = nil
}
