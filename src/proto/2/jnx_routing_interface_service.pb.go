// copyright (c) 2019, Juniper Networks, Inc.
// All rights reserved.
// This IDL defines the APIs for the routing interfaces service.
// The APIs are used to receive routing interface events and
// query routing interfaces on a router.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: jnx_routing_interface_service.proto

// [brief]: This package supports the routing interface services.

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [brief]: Routing interface status.
// [detail]: Routing interface status like
// CHANGED, UP, DOWN, and DELETED applicable
// to InterfaceSubscribeResponse.
// UP and DOWN are applicable to InterfaceGetResponse.
// [default]: RT_INTF_CHANGED.
type InterfaceStatus int32

const (
	// [brief]: Attribute changed.
	InterfaceStatus_RT_INTF_CHANGED InterfaceStatus = 0
	// [brief]: Interface Up.
	InterfaceStatus_RT_INTF_UP InterfaceStatus = 1
	// [brief]: Interface Down.
	InterfaceStatus_RT_INTF_DOWN InterfaceStatus = 2
	// [brief]: Interface Deleted.
	InterfaceStatus_RT_INTF_DELETED InterfaceStatus = 3
)

// Enum value maps for InterfaceStatus.
var (
	InterfaceStatus_name = map[int32]string{
		0: "RT_INTF_CHANGED",
		1: "RT_INTF_UP",
		2: "RT_INTF_DOWN",
		3: "RT_INTF_DELETED",
	}
	InterfaceStatus_value = map[string]int32{
		"RT_INTF_CHANGED": 0,
		"RT_INTF_UP":      1,
		"RT_INTF_DOWN":    2,
		"RT_INTF_DELETED": 3,
	}
)

func (x InterfaceStatus) Enum() *InterfaceStatus {
	p := new(InterfaceStatus)
	*p = x
	return p
}

func (x InterfaceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_jnx_routing_interface_service_proto_enumTypes[0].Descriptor()
}

func (InterfaceStatus) Type() protoreflect.EnumType {
	return &file_jnx_routing_interface_service_proto_enumTypes[0]
}

func (x InterfaceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceStatus.Descriptor instead.
func (InterfaceStatus) EnumDescriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{0}
}

// [brief]: Response status.
// [detail]: Response status code for interface initialization.
// [default]: SUCCESS_COMPLETED.
type InterfaceInitializeResponse_StatusCode int32

const (
	// [brief]: Request successfully completed.
	InterfaceInitializeResponse_SUCCESS_COMPLETED InterfaceInitializeResponse_StatusCode = 0
	// [brief]: Request successfully completed, with
	// a preexisting client of the same client
	// identifier being rebound.
	InterfaceInitializeResponse_SUCCESS_REBOUND InterfaceInitializeResponse_StatusCode = 1
	// [brief]: Request failed due to an internal error.
	InterfaceInitializeResponse_INTERNAL_ERROR InterfaceInitializeResponse_StatusCode = 2
	// [brief]: Service is already initialized.
	InterfaceInitializeResponse_ALREADY_INITIALIZED InterfaceInitializeResponse_StatusCode = 3
)

// Enum value maps for InterfaceInitializeResponse_StatusCode.
var (
	InterfaceInitializeResponse_StatusCode_name = map[int32]string{
		0: "SUCCESS_COMPLETED",
		1: "SUCCESS_REBOUND",
		2: "INTERNAL_ERROR",
		3: "ALREADY_INITIALIZED",
	}
	InterfaceInitializeResponse_StatusCode_value = map[string]int32{
		"SUCCESS_COMPLETED":   0,
		"SUCCESS_REBOUND":     1,
		"INTERNAL_ERROR":      2,
		"ALREADY_INITIALIZED": 3,
	}
)

func (x InterfaceInitializeResponse_StatusCode) Enum() *InterfaceInitializeResponse_StatusCode {
	p := new(InterfaceInitializeResponse_StatusCode)
	*p = x
	return p
}

func (x InterfaceInitializeResponse_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceInitializeResponse_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_jnx_routing_interface_service_proto_enumTypes[1].Descriptor()
}

func (InterfaceInitializeResponse_StatusCode) Type() protoreflect.EnumType {
	return &file_jnx_routing_interface_service_proto_enumTypes[1]
}

func (x InterfaceInitializeResponse_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceInitializeResponse_StatusCode.Descriptor instead.
func (InterfaceInitializeResponse_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{3, 0}
}

// [brief]: Response status.
// [detail]: Interface get Response status code.
// [default]: SUCCESS_COMPLETED.
type InterfaceGetResponse_StatusCode int32

const (
	// [brief]: Request completed successfully.
	InterfaceGetResponse_SUCCESS_COMPLETED InterfaceGetResponse_StatusCode = 0
	// [brief]: Request failed due to an internal error.
	InterfaceGetResponse_INTERNAL_ERROR InterfaceGetResponse_StatusCode = 1
	// [brief]: Service is not initialized.
	InterfaceGetResponse_NOT_INITIALIZED InterfaceGetResponse_StatusCode = 2
	// [brief]: Interface name and index are invalid.
	InterfaceGetResponse_INVALID_INDEX_AND_NAME InterfaceGetResponse_StatusCode = 3
	// [brief]: Interface was not found.
	InterfaceGetResponse_NOT_FOUND InterfaceGetResponse_StatusCode = 4
)

// Enum value maps for InterfaceGetResponse_StatusCode.
var (
	InterfaceGetResponse_StatusCode_name = map[int32]string{
		0: "SUCCESS_COMPLETED",
		1: "INTERNAL_ERROR",
		2: "NOT_INITIALIZED",
		3: "INVALID_INDEX_AND_NAME",
		4: "NOT_FOUND",
	}
	InterfaceGetResponse_StatusCode_value = map[string]int32{
		"SUCCESS_COMPLETED":      0,
		"INTERNAL_ERROR":         1,
		"NOT_INITIALIZED":        2,
		"INVALID_INDEX_AND_NAME": 3,
		"NOT_FOUND":              4,
	}
)

func (x InterfaceGetResponse_StatusCode) Enum() *InterfaceGetResponse_StatusCode {
	p := new(InterfaceGetResponse_StatusCode)
	*p = x
	return p
}

func (x InterfaceGetResponse_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceGetResponse_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_jnx_routing_interface_service_proto_enumTypes[2].Descriptor()
}

func (InterfaceGetResponse_StatusCode) Type() protoreflect.EnumType {
	return &file_jnx_routing_interface_service_proto_enumTypes[2]
}

func (x InterfaceGetResponse_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceGetResponse_StatusCode.Descriptor instead.
func (InterfaceGetResponse_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{5, 0}
}

// [brief]: Response status.
// [detail]: Response status code.
// [default]: SUCCESS_COMPLETED.
type InterfaceSubscribeResponse_StatusCode int32

const (
	// [brief]: Request successfully completed.
	InterfaceSubscribeResponse_SUCCESS_COMPLETED InterfaceSubscribeResponse_StatusCode = 0
	// [brief]: Request failed due to an internal error.
	InterfaceSubscribeResponse_INTERNAL_ERROR InterfaceSubscribeResponse_StatusCode = 1
	// [brief]: Service is not initialized.
	InterfaceSubscribeResponse_NOT_INITIALIZED InterfaceSubscribeResponse_StatusCode = 2
	// [brief]: Notification is already subscribed.
	InterfaceSubscribeResponse_ALREADY_SUBSCRIBED InterfaceSubscribeResponse_StatusCode = 3
)

// Enum value maps for InterfaceSubscribeResponse_StatusCode.
var (
	InterfaceSubscribeResponse_StatusCode_name = map[int32]string{
		0: "SUCCESS_COMPLETED",
		1: "INTERNAL_ERROR",
		2: "NOT_INITIALIZED",
		3: "ALREADY_SUBSCRIBED",
	}
	InterfaceSubscribeResponse_StatusCode_value = map[string]int32{
		"SUCCESS_COMPLETED":  0,
		"INTERNAL_ERROR":     1,
		"NOT_INITIALIZED":    2,
		"ALREADY_SUBSCRIBED": 3,
	}
)

func (x InterfaceSubscribeResponse_StatusCode) Enum() *InterfaceSubscribeResponse_StatusCode {
	p := new(InterfaceSubscribeResponse_StatusCode)
	*p = x
	return p
}

func (x InterfaceSubscribeResponse_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceSubscribeResponse_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_jnx_routing_interface_service_proto_enumTypes[3].Descriptor()
}

func (InterfaceSubscribeResponse_StatusCode) Type() protoreflect.EnumType {
	return &file_jnx_routing_interface_service_proto_enumTypes[3]
}

func (x InterfaceSubscribeResponse_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceSubscribeResponse_StatusCode.Descriptor instead.
func (InterfaceSubscribeResponse_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{7, 0}
}

// [brief]: Notification unsubscribe response status.
// [detail]: Status code for the interface unsubscribe response.
// [default]: SUCCESS_COMPLETED.
type InterfaceUnsubscribeResponse_StatusCode int32

const (
	// [brief]: Request successfully completed.
	InterfaceUnsubscribeResponse_SUCCESS_COMPLETED InterfaceUnsubscribeResponse_StatusCode = 0
	// [brief]: Request failed due to an internal error.
	InterfaceUnsubscribeResponse_INTERNAL_ERROR InterfaceUnsubscribeResponse_StatusCode = 1
	// [brief]: Service is not initialized.
	InterfaceUnsubscribeResponse_NOT_INITIALIZED InterfaceUnsubscribeResponse_StatusCode = 2
	// [brief]: Notification is not subscribed.
	InterfaceUnsubscribeResponse_NOTIFICATION_NOT_SUBSCRIBED InterfaceUnsubscribeResponse_StatusCode = 3
)

// Enum value maps for InterfaceUnsubscribeResponse_StatusCode.
var (
	InterfaceUnsubscribeResponse_StatusCode_name = map[int32]string{
		0: "SUCCESS_COMPLETED",
		1: "INTERNAL_ERROR",
		2: "NOT_INITIALIZED",
		3: "NOTIFICATION_NOT_SUBSCRIBED",
	}
	InterfaceUnsubscribeResponse_StatusCode_value = map[string]int32{
		"SUCCESS_COMPLETED":           0,
		"INTERNAL_ERROR":              1,
		"NOT_INITIALIZED":             2,
		"NOTIFICATION_NOT_SUBSCRIBED": 3,
	}
)

func (x InterfaceUnsubscribeResponse_StatusCode) Enum() *InterfaceUnsubscribeResponse_StatusCode {
	p := new(InterfaceUnsubscribeResponse_StatusCode)
	*p = x
	return p
}

func (x InterfaceUnsubscribeResponse_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceUnsubscribeResponse_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_jnx_routing_interface_service_proto_enumTypes[4].Descriptor()
}

func (InterfaceUnsubscribeResponse_StatusCode) Type() protoreflect.EnumType {
	return &file_jnx_routing_interface_service_proto_enumTypes[4]
}

func (x InterfaceUnsubscribeResponse_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceUnsubscribeResponse_StatusCode.Descriptor instead.
func (InterfaceUnsubscribeResponse_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{9, 0}
}

// [brief]: Notification refresh response status.
// [detail]: Status code for the interface refresh request.
// [default]: SUCCESS_COMPLETED.
type InterfaceRefreshResponse_StatusCode int32

const (
	// [brief]: Request successfully completed.
	InterfaceRefreshResponse_SUCCESS_COMPLETED InterfaceRefreshResponse_StatusCode = 0
	// [brief]: Request failed due to an internal error.
	InterfaceRefreshResponse_INTERNAL_ERROR InterfaceRefreshResponse_StatusCode = 1
	// [brief]: Service is not initialized.
	InterfaceRefreshResponse_NOT_INITIALIZED InterfaceRefreshResponse_StatusCode = 2
	// [brief]: Notification is not subscribed.
	InterfaceRefreshResponse_NOTIFICATION_NOT_SUBSCRIBED InterfaceRefreshResponse_StatusCode = 3
)

// Enum value maps for InterfaceRefreshResponse_StatusCode.
var (
	InterfaceRefreshResponse_StatusCode_name = map[int32]string{
		0: "SUCCESS_COMPLETED",
		1: "INTERNAL_ERROR",
		2: "NOT_INITIALIZED",
		3: "NOTIFICATION_NOT_SUBSCRIBED",
	}
	InterfaceRefreshResponse_StatusCode_value = map[string]int32{
		"SUCCESS_COMPLETED":           0,
		"INTERNAL_ERROR":              1,
		"NOT_INITIALIZED":             2,
		"NOTIFICATION_NOT_SUBSCRIBED": 3,
	}
)

func (x InterfaceRefreshResponse_StatusCode) Enum() *InterfaceRefreshResponse_StatusCode {
	p := new(InterfaceRefreshResponse_StatusCode)
	*p = x
	return p
}

func (x InterfaceRefreshResponse_StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InterfaceRefreshResponse_StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_jnx_routing_interface_service_proto_enumTypes[5].Descriptor()
}

func (InterfaceRefreshResponse_StatusCode) Type() protoreflect.EnumType {
	return &file_jnx_routing_interface_service_proto_enumTypes[5]
}

func (x InterfaceRefreshResponse_StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InterfaceRefreshResponse_StatusCode.Descriptor instead.
func (InterfaceRefreshResponse_StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{11, 0}
}

// [brief]: Routing interface Address.
// [detail]: The network address linked to the interface.
type InterfaceAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: IPv4 or IPv6 address of the interface.
	// [mandatory]:
	Address *NetworkAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// [brief]: Prefix length of the address.
	// [mandatory]:
	PrefixLength uint32 `protobuf:"varint,2,opt,name=prefix_length,json=prefixLength,proto3" json:"prefix_length,omitempty"`
	// [brief]: Indicates whether this is the primary
	// IP adddress of the interface.
	// [mandatory]:
	IsPrimary bool `protobuf:"varint,3,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
}

func (x *InterfaceAddress) Reset() {
	*x = InterfaceAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceAddress) ProtoMessage() {}

func (x *InterfaceAddress) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceAddress.ProtoReflect.Descriptor instead.
func (*InterfaceAddress) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{0}
}

func (x *InterfaceAddress) GetAddress() *NetworkAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *InterfaceAddress) GetPrefixLength() uint32 {
	if x != nil {
		return x.PrefixLength
	}
	return 0
}

func (x *InterfaceAddress) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

// [brief]: Routing interface entry.
// [detail]: This entry contains the information of a
// routing interface. It is used by
// InterfaceSubscribeResponse and
// InterfaceGetResponse.
//
// In a InterfaceSubscribeResponse
// notifying of a CHANGED or UP status, and in a
// InterfaceGetResponse, all attributes are
// applicable.
//
// In a InterfaceSubscribeResponse
// notifying of a DOWN or DELETED status, only the
// name and status attributes are applicable.
type InterfaceEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Name in the format of type-fpc/pic/port.logical.
	// [mandatory]:
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// [brief]: Interface index.
	// [default_value]: 0
	Index uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	// [brief]: interface status.
	// [mandatory]:
	Status InterfaceStatus `protobuf:"varint,3,opt,name=status,proto3,enum=jnx.jet.routing.interfaces.InterfaceStatus" json:"status,omitempty"`
	// [brief]: Bandwidth in bps.
	// [default_value]: 0
	Bandwidth uint64 `protobuf:"varint,4,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	// [brief]: Maximum transmission unit.
	// [default_value]: 0
	Mtu uint32 `protobuf:"varint,5,opt,name=mtu,proto3" json:"mtu,omitempty"`
	// [brief]: Interface Addresses.
	// There may be none, one or multiple addresses.
	// [default_value]: 0
	Addresses []*InterfaceAddress `protobuf:"bytes,6,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *InterfaceEntry) Reset() {
	*x = InterfaceEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceEntry) ProtoMessage() {}

func (x *InterfaceEntry) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceEntry.ProtoReflect.Descriptor instead.
func (*InterfaceEntry) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{1}
}

func (x *InterfaceEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InterfaceEntry) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *InterfaceEntry) GetStatus() InterfaceStatus {
	if x != nil {
		return x.Status
	}
	return InterfaceStatus_RT_INTF_CHANGED
}

func (x *InterfaceEntry) GetBandwidth() uint64 {
	if x != nil {
		return x.Bandwidth
	}
	return 0
}

func (x *InterfaceEntry) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *InterfaceEntry) GetAddresses() []*InterfaceAddress {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// [brief]: Routing interface service initialize request.
// [detail]: A client sends this request to initialize the service.
type InterfaceInitializeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InterfaceInitializeRequest) Reset() {
	*x = InterfaceInitializeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceInitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceInitializeRequest) ProtoMessage() {}

func (x *InterfaceInitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceInitializeRequest.ProtoReflect.Descriptor instead.
func (*InterfaceInitializeRequest) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{2}
}

// [brief]: Routing interface service initialize response.
// [detail]: Routing interface service initialize response.
type InterfaceInitializeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Top level return code.
	// [mandatory]:
	Status *RpcStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// [brief]: The API specific return sub-code for the request.
	// [mandatory]:
	SubCode InterfaceInitializeResponse_StatusCode `protobuf:"varint,2,opt,name=sub_code,json=subCode,proto3,enum=jnx.jet.routing.interfaces.InterfaceInitializeResponse_StatusCode" json:"sub_code,omitempty"`
}

func (x *InterfaceInitializeResponse) Reset() {
	*x = InterfaceInitializeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceInitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceInitializeResponse) ProtoMessage() {}

func (x *InterfaceInitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceInitializeResponse.ProtoReflect.Descriptor instead.
func (*InterfaceInitializeResponse) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{3}
}

func (x *InterfaceInitializeResponse) GetStatus() *RpcStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *InterfaceInitializeResponse) GetSubCode() InterfaceInitializeResponse_StatusCode {
	if x != nil {
		return x.SubCode
	}
	return InterfaceInitializeResponse_SUCCESS_COMPLETED
}

// [brief]: Routing interface get request.
// [detail]: A client sends this request to query an individual interface.
type InterfaceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Key as either the interface name or index of the interface.
	// [mandatory]:
	//
	// Types that are assignable to Key:
	//	*InterfaceGetRequest_Name
	//	*InterfaceGetRequest_Index
	Key isInterfaceGetRequest_Key `protobuf_oneof:"key"`
	// [brief]: The format of IP addresses to be used in response.
	AddressFormat AddressFormat `protobuf:"varint,3,opt,name=address_format,json=addressFormat,proto3,enum=jnx.jet.common.AddressFormat" json:"address_format,omitempty"`
}

func (x *InterfaceGetRequest) Reset() {
	*x = InterfaceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceGetRequest) ProtoMessage() {}

func (x *InterfaceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceGetRequest.ProtoReflect.Descriptor instead.
func (*InterfaceGetRequest) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{4}
}

func (m *InterfaceGetRequest) GetKey() isInterfaceGetRequest_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *InterfaceGetRequest) GetName() string {
	if x, ok := x.GetKey().(*InterfaceGetRequest_Name); ok {
		return x.Name
	}
	return ""
}

func (x *InterfaceGetRequest) GetIndex() uint32 {
	if x, ok := x.GetKey().(*InterfaceGetRequest_Index); ok {
		return x.Index
	}
	return 0
}

func (x *InterfaceGetRequest) GetAddressFormat() AddressFormat {
	if x != nil {
		return x.AddressFormat
	}
	return AddressFormat_ADDRESS_STRING
}

type isInterfaceGetRequest_Key interface {
	isInterfaceGetRequest_Key()
}

type InterfaceGetRequest_Name struct {
	// [brief]: Interface name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type InterfaceGetRequest_Index struct {
	// [brief]: Interface index.
	Index uint32 `protobuf:"varint,2,opt,name=index,proto3,oneof"`
}

func (*InterfaceGetRequest_Name) isInterfaceGetRequest_Key() {}

func (*InterfaceGetRequest_Index) isInterfaceGetRequest_Key() {}

// [brief]: Routing interface get response.
// [detail]: Response message for get interface request.
type InterfaceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Top level return code.
	// [mandatory]:
	Status *RpcStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// [brief]: The API specific return sub-code for the request.
	// [mandatory]:
	SubCode InterfaceGetResponse_StatusCode `protobuf:"varint,2,opt,name=sub_code,json=subCode,proto3,enum=jnx.jet.routing.interfaces.InterfaceGetResponse_StatusCode" json:"sub_code,omitempty"`
	// [brief]: Interface entry.
	// [detail]: Contains an empty entry in error conditions.
	Entry *InterfaceEntry `protobuf:"bytes,3,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *InterfaceGetResponse) Reset() {
	*x = InterfaceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceGetResponse) ProtoMessage() {}

func (x *InterfaceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceGetResponse.ProtoReflect.Descriptor instead.
func (*InterfaceGetResponse) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{5}
}

func (x *InterfaceGetResponse) GetStatus() *RpcStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *InterfaceGetResponse) GetSubCode() InterfaceGetResponse_StatusCode {
	if x != nil {
		return x.SubCode
	}
	return InterfaceGetResponse_SUCCESS_COMPLETED
}

func (x *InterfaceGetResponse) GetEntry() *InterfaceEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// [brief]: Routing interface subscribe request.
// [detail]: A client sends this request to subscribe for interface
// event notifications, which will be streamed to the
// client via InterfaceSubscribeResponses.
type InterfaceSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: The format for IP addresses to be used in response.
	// [default]: string.
	AddressFormat AddressFormat `protobuf:"varint,1,opt,name=address_format,json=addressFormat,proto3,enum=jnx.jet.common.AddressFormat" json:"address_format,omitempty"`
}

func (x *InterfaceSubscribeRequest) Reset() {
	*x = InterfaceSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceSubscribeRequest) ProtoMessage() {}

func (x *InterfaceSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceSubscribeRequest.ProtoReflect.Descriptor instead.
func (*InterfaceSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{6}
}

func (x *InterfaceSubscribeRequest) GetAddressFormat() AddressFormat {
	if x != nil {
		return x.AddressFormat
	}
	return AddressFormat_ADDRESS_STRING
}

// [brief]: Routing interface subscribe response.
// [detail]: Routing interface subscribe response message.
type InterfaceSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Top level return code.
	// [mandatory]:
	Status *RpcStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// [brief]: The API specific return sub-code for the request.
	// [mandatory]:
	SubCode InterfaceSubscribeResponse_StatusCode `protobuf:"varint,2,opt,name=sub_code,json=subCode,proto3,enum=jnx.jet.routing.interfaces.InterfaceSubscribeResponse_StatusCode" json:"sub_code,omitempty"`
	// [brief]: Interface entries.
	// [detail]: Interface entries May contain 0, 1 or multiple entries.
	Entries []*InterfaceEntry `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *InterfaceSubscribeResponse) Reset() {
	*x = InterfaceSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceSubscribeResponse) ProtoMessage() {}

func (x *InterfaceSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceSubscribeResponse.ProtoReflect.Descriptor instead.
func (*InterfaceSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{7}
}

func (x *InterfaceSubscribeResponse) GetStatus() *RpcStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *InterfaceSubscribeResponse) GetSubCode() InterfaceSubscribeResponse_StatusCode {
	if x != nil {
		return x.SubCode
	}
	return InterfaceSubscribeResponse_SUCCESS_COMPLETED
}

func (x *InterfaceSubscribeResponse) GetEntries() []*InterfaceEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// [brief]: Routing interface notification unsubscribe request.
// [detail]: A client sends this request to unsubscribe for interface
// event notifications.
type InterfaceUnsubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InterfaceUnsubscribeRequest) Reset() {
	*x = InterfaceUnsubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceUnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceUnsubscribeRequest) ProtoMessage() {}

func (x *InterfaceUnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceUnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*InterfaceUnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{8}
}

// [brief]: Unsubscribe response message.
// [detail]: Routing interface notification unsubscribe response.
type InterfaceUnsubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Top level return code.
	// [mandatory]:
	Status *RpcStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// [brief]: The API specific return sub-code for the request.
	// [mandatory]:
	SubCode InterfaceUnsubscribeResponse_StatusCode `protobuf:"varint,2,opt,name=sub_code,json=subCode,proto3,enum=jnx.jet.routing.interfaces.InterfaceUnsubscribeResponse_StatusCode" json:"sub_code,omitempty"`
}

func (x *InterfaceUnsubscribeResponse) Reset() {
	*x = InterfaceUnsubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceUnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceUnsubscribeResponse) ProtoMessage() {}

func (x *InterfaceUnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceUnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*InterfaceUnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{9}
}

func (x *InterfaceUnsubscribeResponse) GetStatus() *RpcStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *InterfaceUnsubscribeResponse) GetSubCode() InterfaceUnsubscribeResponse_StatusCode {
	if x != nil {
		return x.SubCode
	}
	return InterfaceUnsubscribeResponse_SUCCESS_COMPLETED
}

// [brief]: Routing interface notification refresh request.
// [detail]: A client sends this request to receive a full flash
// of all interfaces. RoutingInterfaceNotificationResponses
// carrying the information of all the interfaces will
// be streamed to the client.
type InterfaceRefreshRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InterfaceRefreshRequest) Reset() {
	*x = InterfaceRefreshRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceRefreshRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceRefreshRequest) ProtoMessage() {}

func (x *InterfaceRefreshRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceRefreshRequest.ProtoReflect.Descriptor instead.
func (*InterfaceRefreshRequest) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{10}
}

// [brief]: Routing interface notification refresh response.
// [detail]: Response message for the interface refresh request.
type InterfaceRefreshResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Top level return code.
	// [mandatory]:
	Status *RpcStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// [brief]: The API specific return sub-code for the request.
	// [mandatory]:
	SubCode InterfaceRefreshResponse_StatusCode `protobuf:"varint,2,opt,name=sub_code,json=subCode,proto3,enum=jnx.jet.routing.interfaces.InterfaceRefreshResponse_StatusCode" json:"sub_code,omitempty"`
}

func (x *InterfaceRefreshResponse) Reset() {
	*x = InterfaceRefreshResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_routing_interface_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InterfaceRefreshResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterfaceRefreshResponse) ProtoMessage() {}

func (x *InterfaceRefreshResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_routing_interface_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterfaceRefreshResponse.ProtoReflect.Descriptor instead.
func (*InterfaceRefreshResponse) Descriptor() ([]byte, []int) {
	return file_jnx_routing_interface_service_proto_rawDescGZIP(), []int{11}
}

func (x *InterfaceRefreshResponse) GetStatus() *RpcStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *InterfaceRefreshResponse) GetSubCode() InterfaceRefreshResponse_StatusCode {
	if x != nil {
		return x.SubCode
	}
	return InterfaceRefreshResponse_SUCCESS_COMPLETED
}

var File_jnx_routing_interface_service_proto protoreflect.FileDescriptor

var file_jnx_routing_interface_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6a, 0x6e, 0x78, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x1a, 0x1b, 0x6a, 0x6e, 0x78, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x6a, 0x6e, 0x78, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6a, 0x6e, 0x78,
	0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3e,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x22, 0xfb, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6d, 0x74, 0x75, 0x12, 0x4a, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65,
	0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x22, 0x1c, 0x0a, 0x1a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x96,
	0x02, 0x0a, 0x1b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x5d, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x65, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x5f, 0x52, 0x45, 0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x17,
	0x0a, 0x13, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41,
	0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x03, 0x22, 0x90, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x44, 0x0a,
	0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xdc, 0x02, 0x0a, 0x14, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x56, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a,
	0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x40,
	0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0x77, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x54,
	0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1a,
	0x0a, 0x16, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x5f,
	0x41, 0x4e, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x22, 0x61, 0x0a, 0x19, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0d, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xd9, 0x02, 0x0a,
	0x1a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x6e,
	0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x70, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5c,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x41, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x64, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4e,
	0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x16, 0x0a, 0x12, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x53, 0x55, 0x42, 0x53,
	0x43, 0x52, 0x49, 0x42, 0x45, 0x44, 0x10, 0x03, 0x22, 0x1d, 0x0a, 0x1b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa0, 0x02, 0x0a, 0x1c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a,
	0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5e, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e,
	0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6d, 0x0a, 0x0a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55,
	0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x44, 0x10, 0x03, 0x22, 0x19, 0x0a, 0x17, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x98, 0x02, 0x0a, 0x18, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65,
	0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x6d, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e,
	0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f,
	0x54, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x1f, 0x0a, 0x1b, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x44, 0x10, 0x03,
	0x2a, 0x5d, 0x0a, 0x0f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x54, 0x5f, 0x49,
	0x4e, 0x54, 0x46, 0x5f, 0x55, 0x50, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x54, 0x5f, 0x49,
	0x4e, 0x54, 0x46, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x54,
	0x5f, 0x49, 0x4e, 0x54, 0x46, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x32,
	0xa5, 0x05, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x88,
	0x01, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x36, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74,
	0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37,
	0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x0c, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x47, 0x65, 0x74, 0x12, 0x2f, 0x2e, 0x6a, 0x6e, 0x78, 0x2e,
	0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6a, 0x6e, 0x78,
	0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87,
	0x01, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x35, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6a,
	0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x8b, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x12, 0x37, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6a, 0x6e, 0x78,
	0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x33, 0x2e, 0x6a, 0x6e, 0x78,
	0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x34, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x11, 0x6c, 0x61, 0x62, 0x6e, 0x65,
	0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x82, 0xb5, 0x18, 0x05,
	0x30, 0x2e, 0x30, 0x2e, 0x30, 0x8a, 0xb5, 0x18, 0x04, 0x31, 0x39, 0x2e, 0x33, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jnx_routing_interface_service_proto_rawDescOnce sync.Once
	file_jnx_routing_interface_service_proto_rawDescData = file_jnx_routing_interface_service_proto_rawDesc
)

func file_jnx_routing_interface_service_proto_rawDescGZIP() []byte {
	file_jnx_routing_interface_service_proto_rawDescOnce.Do(func() {
		file_jnx_routing_interface_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_jnx_routing_interface_service_proto_rawDescData)
	})
	return file_jnx_routing_interface_service_proto_rawDescData
}

var file_jnx_routing_interface_service_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_jnx_routing_interface_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_jnx_routing_interface_service_proto_goTypes = []interface{}{
	(InterfaceStatus)(0),                         // 0: jnx.jet.routing.interfaces.InterfaceStatus
	(InterfaceInitializeResponse_StatusCode)(0),  // 1: jnx.jet.routing.interfaces.InterfaceInitializeResponse.StatusCode
	(InterfaceGetResponse_StatusCode)(0),         // 2: jnx.jet.routing.interfaces.InterfaceGetResponse.StatusCode
	(InterfaceSubscribeResponse_StatusCode)(0),   // 3: jnx.jet.routing.interfaces.InterfaceSubscribeResponse.StatusCode
	(InterfaceUnsubscribeResponse_StatusCode)(0), // 4: jnx.jet.routing.interfaces.InterfaceUnsubscribeResponse.StatusCode
	(InterfaceRefreshResponse_StatusCode)(0),     // 5: jnx.jet.routing.interfaces.InterfaceRefreshResponse.StatusCode
	(*InterfaceAddress)(nil),                     // 6: jnx.jet.routing.interfaces.InterfaceAddress
	(*InterfaceEntry)(nil),                       // 7: jnx.jet.routing.interfaces.InterfaceEntry
	(*InterfaceInitializeRequest)(nil),           // 8: jnx.jet.routing.interfaces.InterfaceInitializeRequest
	(*InterfaceInitializeResponse)(nil),          // 9: jnx.jet.routing.interfaces.InterfaceInitializeResponse
	(*InterfaceGetRequest)(nil),                  // 10: jnx.jet.routing.interfaces.InterfaceGetRequest
	(*InterfaceGetResponse)(nil),                 // 11: jnx.jet.routing.interfaces.InterfaceGetResponse
	(*InterfaceSubscribeRequest)(nil),            // 12: jnx.jet.routing.interfaces.InterfaceSubscribeRequest
	(*InterfaceSubscribeResponse)(nil),           // 13: jnx.jet.routing.interfaces.InterfaceSubscribeResponse
	(*InterfaceUnsubscribeRequest)(nil),          // 14: jnx.jet.routing.interfaces.InterfaceUnsubscribeRequest
	(*InterfaceUnsubscribeResponse)(nil),         // 15: jnx.jet.routing.interfaces.InterfaceUnsubscribeResponse
	(*InterfaceRefreshRequest)(nil),              // 16: jnx.jet.routing.interfaces.InterfaceRefreshRequest
	(*InterfaceRefreshResponse)(nil),             // 17: jnx.jet.routing.interfaces.InterfaceRefreshResponse
	(*NetworkAddress)(nil),                       // 18: jnx.jet.routing.base.NetworkAddress
	(*RpcStatus)(nil),                            // 19: jnx.jet.common.RpcStatus
	(AddressFormat)(0),                           // 20: jnx.jet.common.AddressFormat
}
var file_jnx_routing_interface_service_proto_depIdxs = []int32{
	18, // 0: jnx.jet.routing.interfaces.InterfaceAddress.address:type_name -> jnx.jet.routing.base.NetworkAddress
	0,  // 1: jnx.jet.routing.interfaces.InterfaceEntry.status:type_name -> jnx.jet.routing.interfaces.InterfaceStatus
	6,  // 2: jnx.jet.routing.interfaces.InterfaceEntry.addresses:type_name -> jnx.jet.routing.interfaces.InterfaceAddress
	19, // 3: jnx.jet.routing.interfaces.InterfaceInitializeResponse.status:type_name -> jnx.jet.common.RpcStatus
	1,  // 4: jnx.jet.routing.interfaces.InterfaceInitializeResponse.sub_code:type_name -> jnx.jet.routing.interfaces.InterfaceInitializeResponse.StatusCode
	20, // 5: jnx.jet.routing.interfaces.InterfaceGetRequest.address_format:type_name -> jnx.jet.common.AddressFormat
	19, // 6: jnx.jet.routing.interfaces.InterfaceGetResponse.status:type_name -> jnx.jet.common.RpcStatus
	2,  // 7: jnx.jet.routing.interfaces.InterfaceGetResponse.sub_code:type_name -> jnx.jet.routing.interfaces.InterfaceGetResponse.StatusCode
	7,  // 8: jnx.jet.routing.interfaces.InterfaceGetResponse.entry:type_name -> jnx.jet.routing.interfaces.InterfaceEntry
	20, // 9: jnx.jet.routing.interfaces.InterfaceSubscribeRequest.address_format:type_name -> jnx.jet.common.AddressFormat
	19, // 10: jnx.jet.routing.interfaces.InterfaceSubscribeResponse.status:type_name -> jnx.jet.common.RpcStatus
	3,  // 11: jnx.jet.routing.interfaces.InterfaceSubscribeResponse.sub_code:type_name -> jnx.jet.routing.interfaces.InterfaceSubscribeResponse.StatusCode
	7,  // 12: jnx.jet.routing.interfaces.InterfaceSubscribeResponse.entries:type_name -> jnx.jet.routing.interfaces.InterfaceEntry
	19, // 13: jnx.jet.routing.interfaces.InterfaceUnsubscribeResponse.status:type_name -> jnx.jet.common.RpcStatus
	4,  // 14: jnx.jet.routing.interfaces.InterfaceUnsubscribeResponse.sub_code:type_name -> jnx.jet.routing.interfaces.InterfaceUnsubscribeResponse.StatusCode
	19, // 15: jnx.jet.routing.interfaces.InterfaceRefreshResponse.status:type_name -> jnx.jet.common.RpcStatus
	5,  // 16: jnx.jet.routing.interfaces.InterfaceRefreshResponse.sub_code:type_name -> jnx.jet.routing.interfaces.InterfaceRefreshResponse.StatusCode
	8,  // 17: jnx.jet.routing.interfaces.Interfaces.InterfaceInitialize:input_type -> jnx.jet.routing.interfaces.InterfaceInitializeRequest
	10, // 18: jnx.jet.routing.interfaces.Interfaces.InterfaceGet:input_type -> jnx.jet.routing.interfaces.InterfaceGetRequest
	12, // 19: jnx.jet.routing.interfaces.Interfaces.InterfaceSubscribe:input_type -> jnx.jet.routing.interfaces.InterfaceSubscribeRequest
	14, // 20: jnx.jet.routing.interfaces.Interfaces.InterfaceUnsubscribe:input_type -> jnx.jet.routing.interfaces.InterfaceUnsubscribeRequest
	16, // 21: jnx.jet.routing.interfaces.Interfaces.InterfaceRefresh:input_type -> jnx.jet.routing.interfaces.InterfaceRefreshRequest
	9,  // 22: jnx.jet.routing.interfaces.Interfaces.InterfaceInitialize:output_type -> jnx.jet.routing.interfaces.InterfaceInitializeResponse
	11, // 23: jnx.jet.routing.interfaces.Interfaces.InterfaceGet:output_type -> jnx.jet.routing.interfaces.InterfaceGetResponse
	13, // 24: jnx.jet.routing.interfaces.Interfaces.InterfaceSubscribe:output_type -> jnx.jet.routing.interfaces.InterfaceSubscribeResponse
	15, // 25: jnx.jet.routing.interfaces.Interfaces.InterfaceUnsubscribe:output_type -> jnx.jet.routing.interfaces.InterfaceUnsubscribeResponse
	17, // 26: jnx.jet.routing.interfaces.Interfaces.InterfaceRefresh:output_type -> jnx.jet.routing.interfaces.InterfaceRefreshResponse
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_jnx_routing_interface_service_proto_init() }
func file_jnx_routing_interface_service_proto_init() {
	if File_jnx_routing_interface_service_proto != nil {
		return
	}
	file_jnx_common_addr_types_proto_init()
	file_jnx_common_base_types_proto_init()
	file_jnx_routing_base_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_jnx_routing_interface_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_routing_interface_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_routing_interface_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceInitializeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_routing_interface_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceInitializeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_routing_interface_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_routing_interface_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_routing_interface_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_routing_interface_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_routing_interface_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceUnsubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_routing_interface_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceUnsubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_routing_interface_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceRefreshRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_routing_interface_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InterfaceRefreshResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_jnx_routing_interface_service_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*InterfaceGetRequest_Name)(nil),
		(*InterfaceGetRequest_Index)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jnx_routing_interface_service_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jnx_routing_interface_service_proto_goTypes,
		DependencyIndexes: file_jnx_routing_interface_service_proto_depIdxs,
		EnumInfos:         file_jnx_routing_interface_service_proto_enumTypes,
		MessageInfos:      file_jnx_routing_interface_service_proto_msgTypes,
	}.Build()
	File_jnx_routing_interface_service_proto = out.File
	file_jnx_routing_interface_service_proto_rawDesc = nil
	file_jnx_routing_interface_service_proto_goTypes = nil
	file_jnx_routing_interface_service_proto_depIdxs = nil
}
