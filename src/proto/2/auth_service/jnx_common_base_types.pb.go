//
// Copyright 2018, Juniper Networks, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: jnx_common_base_types.proto

// [brief]: JET Common Package

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// [brief]: Global status codes to be returned in response messages.
// [detail]: Global status codes to be returned in response messages.
// Per-RPC specific status/error codes are to be conveyed
// in sub-codes defined in respective API definitions.
// [default]: SUCCESS
type StatusCode int32

const (
	// [brief]: Indicates that the RPC executed without error
	StatusCode_SUCCESS StatusCode = 0
	// [brief]: Indicates a failure condition that should be treated as fatal
	StatusCode_FAILURE StatusCode = 1
)

// Enum value maps for StatusCode.
var (
	StatusCode_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILURE",
	}
	StatusCode_value = map[string]int32{
		"SUCCESS": 0,
		"FAILURE": 1,
	}
)

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}

func (x StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_jnx_common_base_types_proto_enumTypes[0].Descriptor()
}

func (StatusCode) Type() protoreflect.EnumType {
	return &file_jnx_common_base_types_proto_enumTypes[0]
}

func (x StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusCode.Descriptor instead.
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_jnx_common_base_types_proto_rawDescGZIP(), []int{0}
}

// [brief]: Message representing timeval structure
// [detail]: Message representing timeval structure
type TimeVal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Seconds from timeval structure
	Seconds uint64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// [brief]: Microseconds from timeval structure
	Microseconds uint64 `protobuf:"varint,2,opt,name=microseconds,proto3" json:"microseconds,omitempty"`
}

func (x *TimeVal) Reset() {
	*x = TimeVal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_common_base_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeVal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeVal) ProtoMessage() {}

func (x *TimeVal) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_common_base_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeVal.ProtoReflect.Descriptor instead.
func (*TimeVal) Descriptor() ([]byte, []int) {
	return file_jnx_common_base_types_proto_rawDescGZIP(), []int{0}
}

func (x *TimeVal) GetSeconds() uint64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *TimeVal) GetMicroseconds() uint64 {
	if x != nil {
		return x.Microseconds
	}
	return 0
}

// [brief]: RPC execution status information
// [detail]: RPC execution status information
type RpcStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Numerical code indicating success or failure of an RPC
	Code StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=jnx.jet.common.StatusCode" json:"code,omitempty"`
	// [brief]: Informational message string to convey reason for RPC failure
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RpcStatus) Reset() {
	*x = RpcStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_common_base_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcStatus) ProtoMessage() {}

func (x *RpcStatus) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_common_base_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcStatus.ProtoReflect.Descriptor instead.
func (*RpcStatus) Descriptor() ([]byte, []int) {
	return file_jnx_common_base_types_proto_rawDescGZIP(), []int{1}
}

func (x *RpcStatus) GetCode() StatusCode {
	if x != nil {
		return x.Code
	}
	return StatusCode_SUCCESS
}

func (x *RpcStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// [brief]: Numeric ranges can be used to provide range of unsigned 32-bit values.
// [detail]: Numeric ranges can be used to provide range of unsigned 32-bit values.
type NumericRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//[brief]: Range Minimum value (inclusive).
	//[mandatory]:
	Min uint32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	//[brief]: Range Maximum value (inclusive).
	//[mandatory]:
	Max uint32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *NumericRange) Reset() {
	*x = NumericRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_common_base_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumericRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericRange) ProtoMessage() {}

func (x *NumericRange) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_common_base_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericRange.ProtoReflect.Descriptor instead.
func (*NumericRange) Descriptor() ([]byte, []int) {
	return file_jnx_common_base_types_proto_rawDescGZIP(), []int{2}
}

func (x *NumericRange) GetMin() uint32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *NumericRange) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

// [brief]: List of Numeric Range.
// [detail]: List of Numeric Range.
type NumericRangeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [brief]: Range List for enums.
	// OPTIONAL
	RangeList []*NumericRange `protobuf:"bytes,1,rep,name=range_list,json=rangeList,proto3" json:"range_list,omitempty"`
}

func (x *NumericRangeList) Reset() {
	*x = NumericRangeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jnx_common_base_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumericRangeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericRangeList) ProtoMessage() {}

func (x *NumericRangeList) ProtoReflect() protoreflect.Message {
	mi := &file_jnx_common_base_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericRangeList.ProtoReflect.Descriptor instead.
func (*NumericRangeList) Descriptor() ([]byte, []int) {
	return file_jnx_common_base_types_proto_rawDescGZIP(), []int{3}
}

func (x *NumericRangeList) GetRangeList() []*NumericRange {
	if x != nil {
		return x.RangeList
	}
	return nil
}

var file_jnx_common_base_types_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50000,
		Name:          "jnx.jet.common.japi_version",
		Tag:           "bytes,50000,opt,name=japi_version",
		Filename:      "jnx_common_base_types.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50001,
		Name:          "jnx.jet.common.junos_release",
		Tag:           "bytes,50001,opt,name=junos_release",
		Filename:      "jnx_common_base_types.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// [brief]: Junos API version string
	//
	// optional string japi_version = 50000;
	E_JapiVersion = &file_jnx_common_base_types_proto_extTypes[0]
	// [brief]: Junos release string of format XY.Z
	//
	// optional string junos_release = 50001;
	E_JunosRelease = &file_jnx_common_base_types_proto_extTypes[1]
)

var File_jnx_common_base_types_proto protoreflect.FileDescriptor

var file_jnx_common_base_types_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6a, 0x6e, 0x78, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6a,
	0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x47, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6a, 0x6e, 0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x32, 0x0a, 0x0c, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x22, 0x4f, 0x0a, 0x10, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x6e,
	0x78, 0x2e, 0x6a, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x75, 0x6d,
	0x65, 0x72, 0x69, 0x63, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x2a, 0x26, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x01, 0x3a, 0x41, 0x0a, 0x0c,
	0x6a, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a,
	0x43, 0x0a, 0x0d, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd1,
	0x86, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x75, 0x6e, 0x6f, 0x73, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x42, 0x24, 0x5a, 0x11, 0x6c, 0x61, 0x62, 0x6e, 0x65, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x82, 0xb5, 0x18, 0x05, 0x30, 0x2e, 0x31,
	0x2e, 0x30, 0x8a, 0xb5, 0x18, 0x04, 0x31, 0x38, 0x2e, 0x34, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_jnx_common_base_types_proto_rawDescOnce sync.Once
	file_jnx_common_base_types_proto_rawDescData = file_jnx_common_base_types_proto_rawDesc
)

func file_jnx_common_base_types_proto_rawDescGZIP() []byte {
	file_jnx_common_base_types_proto_rawDescOnce.Do(func() {
		file_jnx_common_base_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_jnx_common_base_types_proto_rawDescData)
	})
	return file_jnx_common_base_types_proto_rawDescData
}

var file_jnx_common_base_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_jnx_common_base_types_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_jnx_common_base_types_proto_goTypes = []interface{}{
	(StatusCode)(0),                  // 0: jnx.jet.common.StatusCode
	(*TimeVal)(nil),                  // 1: jnx.jet.common.TimeVal
	(*RpcStatus)(nil),                // 2: jnx.jet.common.RpcStatus
	(*NumericRange)(nil),             // 3: jnx.jet.common.NumericRange
	(*NumericRangeList)(nil),         // 4: jnx.jet.common.NumericRangeList
	(*descriptorpb.FileOptions)(nil), // 5: google.protobuf.FileOptions
}
var file_jnx_common_base_types_proto_depIdxs = []int32{
	0, // 0: jnx.jet.common.RpcStatus.code:type_name -> jnx.jet.common.StatusCode
	3, // 1: jnx.jet.common.NumericRangeList.range_list:type_name -> jnx.jet.common.NumericRange
	5, // 2: jnx.jet.common.japi_version:extendee -> google.protobuf.FileOptions
	5, // 3: jnx.jet.common.junos_release:extendee -> google.protobuf.FileOptions
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	2, // [2:4] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_jnx_common_base_types_proto_init() }
func file_jnx_common_base_types_proto_init() {
	if File_jnx_common_base_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jnx_common_base_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeVal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_common_base_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_common_base_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumericRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jnx_common_base_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumericRangeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jnx_common_base_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_jnx_common_base_types_proto_goTypes,
		DependencyIndexes: file_jnx_common_base_types_proto_depIdxs,
		EnumInfos:         file_jnx_common_base_types_proto_enumTypes,
		MessageInfos:      file_jnx_common_base_types_proto_msgTypes,
		ExtensionInfos:    file_jnx_common_base_types_proto_extTypes,
	}.Build()
	File_jnx_common_base_types_proto = out.File
	file_jnx_common_base_types_proto_rawDesc = nil
	file_jnx_common_base_types_proto_goTypes = nil
	file_jnx_common_base_types_proto_depIdxs = nil
}
